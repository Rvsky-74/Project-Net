import{initializeApp as h}from"https://www.gstatic.com/firebasejs/11.3.1/firebase-app.js";import{getAuth as y,onAuthStateChanged as E,signOut as I,GoogleAuthProvider as b,signInWithPopup as w}from"https://www.gstatic.com/firebasejs/11.3.1/firebase-auth.js";import{getFirestore as _,doc as g,setDoc as x,getDoc as L}from"https://www.gstatic.com/firebasejs/11.3.1/firebase-firestore.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function s(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(t){if(t.ep)return;t.ep=!0;const n=s(t);fetch(t.href,n)}})();const S={apiKey:"AIzaSyC_QBQdq1WeLVaIQH_084N__VQISVz5rbk",authDomain:"task-manager-82b19.firebaseapp.com",projectId:"task-manager-82b19",storageBucket:"task-manager-82b19.firebasestorage.app",messagingSenderId:"114619358141",appId:"1:114619358141:web:d24dfd48a7be49018010d4"},f=h(S),c=y(f),m=_(f);async function v(){const r=new b;try{const s=(await w(c,r)).user;console.log("Google Sign-In Success:",s.displayName)}catch(e){console.error("Google Sign-In Error:",e)}}async function D(){try{await I(c),console.log("User logged out")}catch(r){console.error("Logout Error:",r)}}function N(){document.getElementById("log"),c.currentUser?D():v()}async function B(r={}){const e=c.currentUser,s=document.getElementById("Canvas_Text");if(!e){s.innerText="Please Log in before saving";return}const a=[];document.querySelectorAll(".node").forEach(i=>{const l=i.connections,d=[];l.forEach(p=>{d.push(p.name)});const u={name:i.name,x:i.getBoundingClientRect().left,y:i.getBoundingClientRect().top,state:i.state,connections:d};a.push(u)});const n=g(m,"users",e.uid),o={firstName:r.firstName||e.displayName||"Unknown",email:e.email,lastLogin:new Date().toISOString(),node_info:a};await x(n,o,{merge:!0}),s.innerText="Data Saved"}E(c,r=>{const e=document.getElementById("log");if(r){console.log("User is logged in:",r),e.innerText="Logout";const s=r.photoURL,a=document.getElementById("profile-pic");a.src=s,a.onerror=function(){a.src="no-user.png"}}else{console.log("No user is logged in"),e.innerText="Login";const s=document.getElementById("profile-pic");s.src="no-user.png",delete_all()}});async function T(){const r=c.currentUser,e=document.getElementById("Canvas_Text");if(!r){e.innerText="Please Log in before loading";return}try{const s=g(m,"users",r.uid),a=await L(s);if(a.exists()){const n=a.data().node_info||[];delete_all(),n.forEach(o=>{createNode(o.name,o.x,o.y,o.state)}),n.forEach(o=>{const i=nodes.find(l=>l.name===o.name);o.connections.forEach(l=>{const d=nodes.find(u=>u.name===l);create_arrow(i,d),i.connections.push(d)})}),nodes.forEach(o=>update_colors(o,o.state,o.state)),e.innerText="Data Loaded"}else e.innerText="No saved data found"}catch(s){console.error("Error loading user data:",s),e.innerText="Error loading data"}}window.saveUserData=B;window.login=N;window.load=T;
